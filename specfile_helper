#!/bin/sh
#
# rpmhelper
# - create a tarball from the git repo.

# Test if we can reach outside. If we can't we setup a
# default proxy using webproxy:3128 or use the value of
# DEFAULT_PROXY if set.
check_and_set_proxy () {
	echo "Checking proxy setup..."
	if wget https://github.com >/dev/null 2>&1; then
		echo "no proxy setup needed"
	else
		case $? in
		4)      echo "Proxy setup needed. Using default of $DEFAULT_PROXY. Change by setting DEFAULT_PROXY"
			[ -n "$DEFAULT_PROXY" ] || DEFAULT_PROXY=webproxy:3128
			export HTTPS_PROXY=$DEFAULT_PROXY
			export https_proxy=$DEFAULT_PROXY
			export http_proxy=$DEFAULT_PROXY
			;;
                *)
			echo "unxpected error from wget, giving up"
			exit 1
                esac
	fi
}

# get the remote repo from the spec file
set -e
#set -x

cmd=$1

case $cmd in
git2tar)
	check_and_set_proxy
	git_source=https://github.com/vitessio/vitess.git
	git_branch=master
	tmpdir=$(mktemp -d -p $PWD vitess_workdir.XXXXXXXX) || {
		echo "failed to make a tmpdir"
		exit 1
	}
	git clone $git_source $tmpdir
	git_commit_hash=$(cd $tmpdir && git rev-parse --short HEAD)
	git_branch=$(cd $tmpdir && git rev-parse --abbrev-ref HEAD)
	git_commit_ts=$(cd $tmpdir && git log -n1 --pretty=format:%ai | sed -e 's/^\(....-..-.. ..:..:..\).*/\1/' -e 's/[-:]//g' -e 's/ /./')
	git_latest_tag=$(cd $tmpdir && git tag | tail -1 | sed -e 's/-/./g')
	echo "git_branch:     $git_branch"
	echo "git_revision:   $git_commit_hash"
	echo "git_commit_ts:  $git_commit_ts"
	echo "git_latest_tag: $git_latest_tag"
	rpm_version=${git_latest_tag}.${git_commit_ts} # hack!
	echo "$git_branch"      > GIT_BRANCH
	echo "$git_latest_tag"  > GIT_LATEST_TAG
	echo "$git_commit_hash" > GIT_COMMIT_HASH
	echo "$git_commit_ts"   > GIT_COMMIT_TIMESTAMP
	echo "$rpm_version"     > RPM_VERSION
	( cd $tmpdir && git archive --prefix=vitess-${rpm_version}/ --format=tar $git_branch ) | gzip -9 > vitess-${rpm_version}.tar.gz
	;;
*)	echo "unknown command: $cmd"
	exit 1
esac
